apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-deployment
  labels:
    app: eureka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eureka
  template:
    metadata:
      labels:
        app: eureka
    spec:
      containers:
        - name: eureka
          image: 10.200.10.1:5000/demo/eureka:v1.0
          ports:
            - name: liveness-port
              containerPort: 8761
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: liveness-port
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: eureka
spec:
  selector:
    app: eureka
  ports:
    - protocol: TCP
      port: 8761
      targetPort: 8761
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: provider-deployment
  labels:
    app: provider
spec:
  replicas: 1
  selector:
    matchLabels:
      app: provider
  template:
    metadata:
      labels:
        app: provider
    spec:
      containers:
        - name: provider
          image: 10.200.10.1:5000/demo/provider:v1.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8083
          env:
            - name: SPRING_PROFILES_ACTIVE  # 指定激活的profile
              value: "k8s"
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8083
            initialDelaySeconds: 10
            periodSeconds: 5
          lifecycle:
            preStop:
              exec:
                command: ['sh', '-c', '/root/app/preStop.sh']
      terminationGracePeriodSeconds: 60
      initContainers:
        - name: init
          image: curlimages/curl
          command: ['sh', '-c', "until nslookup eureka.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for eureka; sleep 2; done"]
---
apiVersion: v1
kind: Service
metadata:
  name: service-provider
spec:
  selector:
    app: provider
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer-deployment
  labels:
    app: consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer
  template:
    metadata:
      labels:
        app: consumer
    spec:
      containers:
        - name: consumer
          image: 10.200.10.1:5000/demo/consumer:v1.0
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8084
            initialDelaySeconds: 10
            periodSeconds: 5
          ports:
            - containerPort: 8084
          env:
            - name: SPRING_PROFILES_ACTIVE  # 指定激活的profile
              value: "k8s"
      initContainers:
        - name: init
          image: curlimages/curl
          command: ['sh', '-c', "until nslookup eureka.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for eureka; sleep 2; done"]
---
apiVersion: v1
kind: Service
metadata:
  name: service-consumer
spec:
  selector:
    app: consumer
  ports:
    - protocol: TCP
      port: 8084
      targetPort: 8084
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  labels:
    app: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      containers:
        - name: gateway
          image: 10.200.10.1:5000/demo/gateway:v1.0
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8082
            initialDelaySeconds: 10
            periodSeconds: 5
          ports:
            - containerPort: 8082
          env:
            - name: SPRING_PROFILES_ACTIVE  # 指定激活的profile
              value: "k8s"
      initContainers:
        - name: init
          image: curlimages/curl
          command: ['sh', '-c', "until nslookup eureka.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for eureka; sleep 2; done"]
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
spec:
  selector:
    app: gateway
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082
